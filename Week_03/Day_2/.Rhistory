filter(!all_descriptions == "") %>% #removed all empty charachters
filter(!all_descriptions < nchar("abc")) %>% #attempted to remove chars shorter than 2.
filter(!all_descriptions %in% c(0:10)) %>% #attempted to remove anything that contains any numbers 0-10
group_by(all_descriptions) %>% # group by common words
summarise(number_of_descriptions = n()) %>% #count how many times each word was used
arrange(desc(number_of_descriptions)) #arrange by most common word count in descending order
faces <- read_csv("data/face_descriptions.csv") %>%
pivot_longer(cols = c(t1:t50),
names_to = "t_1-50",
values_to = "descriptions_1") %>%
separate(descriptions_1, into = c("description_1",
"description_2",
"description_3",
"description_4",
sep = "/")) %>%
select(c(user_id:description_4)) %>%
pivot_longer(cols = c(description_1: description_4),
names_to = "description_id",
values_to = "all_descriptions") %>%
filter(!is.na(all_descriptions)) %>% #removed all NAs
filter(!all_descriptions == "") %>% #removed all empty charachters
filter(!all_descriptions < nchar("abc")) %>% #attempted to remove chars shorter than 2.
filter(!all_descriptions %in% c(0:10)) %>% #attempted to remove anything that contains any numbers 0-10
group_by(all_descriptions) %>% # group by common words
summarise(number_of_descriptions = n()) %>% #count how many times each word was used
arrange(desc(number_of_descriptions)) #arrange by most common word count in descending order
faces <- read_csv("data/face_descriptions.csv") %>%
pivot_longer(cols = c(t1:t50),
names_to = "t_1-50",
values_to = "descriptions_1") %>%
separate(descriptions_1, into = c("description_1",
"description_2",
"description_3",
"description_4",
sep = "/")) %>%
select(c(user_id:description_4)) %>%
pivot_longer(cols = c(description_1: description_4),
names_to = "description_id",
values_to = "all_descriptions") %>%
filter(!is.na(all_descriptions)) %>% #removed all NAs
filter(!all_descriptions == "") %>% #removed all empty charachters
filter(!all_descriptions < nchar("abc")) %>% #attempted to remove chars shorter than 2.
filter(!all_descriptions %in% c(0:10)) %>% #attempted to remove anything that contains any numbers 0-10
group_by(all_descriptions) %>% # group by common words
summarise(number_of_descriptions) %>% #count how many times each word was used
arrange(desc(number_of_descriptions)) #arrange by most common word count in descending order
faces <- read_csv("data/face_descriptions.csv") %>%
pivot_longer(cols = c(t1:t50),
names_to = "t_1-50",
values_to = "descriptions_1") %>%
separate(descriptions_1, into = c("description_1",
"description_2",
"description_3",
"description_4",
sep = "/")) %>%
select(c(user_id:description_4)) %>%
pivot_longer(cols = c(description_1: description_4),
names_to = "description_id",
values_to = "all_descriptions") %>%
filter(!is.na(all_descriptions)) %>% #removed all NAs
filter(!all_descriptions == "") %>% #removed all empty charachters
filter(!all_descriptions < nchar("abc")) %>% #attempted to remove chars shorter than 2.
filter(!all_descriptions %in% c(0:10)) %>% #attempted to remove anything that contains any numbers 0-10
group_by(all_descriptions) %>% # group by common words
summarise(number_of_descriptions = n()) %>% #count how many times each word was used
arrange(desc(number_of_descriptions)) #arrange by most common word count in descending order
faces <- read_csv("data/face_descriptions.csv") %>%
pivot_longer(cols = c(t1:t50),
names_to = "t_1-50",
values_to = "descriptions_1") %>%
separate(descriptions_1, into = c("description_1",
"description_2",
"description_3",
"description_4",
sep = "/")) %>%
select(c(user_id:description_4)) %>%
pivot_longer(cols = c(description_1: description_4),
names_to = "description_id",
values_to = "all_descriptions") %>%
#filter(!is.na(all_descriptions)) %>% #removed all NAs
#filter(!all_descriptions == "") %>% #removed all empty charachters
#filter(!all_descriptions < nchar("abc")) %>% #attempted to remove chars shorter than 2.
#filter(!all_descriptions %in% c(0:10)) %>% #attempted to remove anything that contains any numbers 0-10
group_by(all_descriptions) %>% # group by common words
summarise(number_of_descriptions = n()) %>% #count how many times each word was used
arrange(desc(number_of_descriptions)) #arrange by most common word count in descending order
faces <- read_csv("data/face_descriptions.csv") %>%
pivot_longer(cols = c(t1:t50),
names_to = "t_1-50",
values_to = "descriptions_1") %>%
separate(descriptions_1, into = c("description_1",
"description_2",
"description_3",
"description_4",
sep = "/")) %>%
select(c(user_id:description_4)) %>%
pivot_longer(cols = c(description_1: description_4),
names_to = "description_id",
values_to = "all_descriptions") %>%
filter(!is.na(all_descriptions)) %>% #removed all NAs
filter(!all_descriptions == "") %>% #removed all empty charachters
filter(!all_descriptions < nchar("abc")) %>% #attempted to remove chars shorter than 2.
filter(!all_descriptions %in% c(0:10)) %>% #attempted to remove anything that contains any numbers 0-10
group_by(all_descriptions) %>% # group by common words
summarise(number_of_descriptions = n()) %>% #count how many times each word was used
arrange(desc(number_of_descriptions)) #arrange by most common word count in descending order
faces <- read_csv("data/face_descriptions.csv") %>%
pivot_longer(cols = c(t1:t50),
names_to = "t_1-50",
values_to = "descriptions_1") %>%
separate(descriptions_1, into = c("description_1",
"description_2",
"description_3",
"description_4",
sep = "/")) %>%
select(c(user_id:description_4))
faces <- read_csv("data/face_descriptions.csv")
faces
faces <- read_csv("data/face_descriptions.csv") %>%
pivot_longer(cols = c(t1:t50),
names_to = "t_1-50",
values_to = "descriptions_1") %>%
separate(descriptions_1, into = c("description_1",
"description_2",
"description_3",
"description_4",
sep = "/")) %>%
select(c(user_id:description_4)) %>%
pivot_longer(cols = c(description_1: description_4),
names_to = "description_id",
values_to = "all_descriptions") %>%
filter(!is.na(all_descriptions)) %>% #removed all NAs
filter(!all_descriptions == "") %>% #removed all empty charachters
filter(!all_descriptions < nchar("abc")) %>% #attempted to remove chars shorter than 2.
filter(!all_descriptions %in% c(0:10)) %>% #attempted to remove anything that contains any numbers 0-10
group_by(all_descriptions) %>% # group by common words
summarise(number_of_descriptions = n()) %>% #count how many times each word was used
arrange(desc(number_of_descriptions)) #arrange by most common word count in descending order
faces
filtered_descriptions <- all_descriptions %>%
filter(!is.na(all_descriptions)) %>% #removed all NAs
filter(!all_descriptions == "") %>% #removed all empty charachters
filter(!all_descriptions < nchar("abc")) %>% #attempted to remove chars shorter than 2.
filter(!all_descriptions %in% c("[0:10]")) #attempted to remove anything that contains any numbers 0-10
filtered_descriptions
most_common_description <- filtered_descriptions %>%
group_by(all_descriptions) %>% # group by common words
summarise(number_of_descriptions = n()) %>% #count how many times each word was used
arrange(desc(number_of_descriptions)) #arrange by most common word count in descending order
most_common_description
filtered_descriptions <- all_descriptions %>%
filter(!is.na(all_descriptions)) %>% #removed all NAs
filter(!all_descriptions == "") %>% #removed all empty charachters
filter(!all_descriptions < nchar("abc")) %>% #attempted to remove chars shorter than 2.
filter(!all_descriptions %in% c("[:digit:]")) #attempted to remove anything that contains any numbers 0-10
filtered_descriptions
faces <- read_csv("data/face_descriptions.csv") %>%
pivot_longer(cols = c(t1:t50),
names_to = "t_1-50",
values_to = "descriptions_1") %>%
separate(descriptions_1, into = c("description_1",
"description_2",
"description_3",
"description_4",
sep = "(["/ ,. "])") %>%
faces <- read_csv("data/face_descriptions.csv") %>%
pivot_longer(cols = c(t1:t50),
names_to = "t_1-50",
values_to = "descriptions_1") %>%
separate(descriptions_1, into = c("description_1",
"description_2",
"description_3",
"description_4",
sep = "(["\/,\. "])") %>%
faces <- read_csv("data/face_descriptions.csv") %>%
pivot_longer(cols = c(t1:t50),
names_to = "t_1-50",
values_to = "descriptions_1") %>%
separate(descriptions_1, into = c("description_1",
"description_2",
"description_3",
"description_4",
sep = "/")) %>%
select(c(user_id:description_4)) %>%
pivot_longer(cols = c(description_1: description_4),
names_to = "description_id",
values_to = "all_descriptions") %>%
filter(!is.na(all_descriptions)) %>% #removed all NAs
filter(!all_descriptions == "") %>% #removed all empty charachters
filter(!all_descriptions < nchar("abc")) %>% #attempted to remove chars shorter than 2.
filter(!all_descriptions %in% c(0:10)) %>% #attempted to remove anything that contains any numbers 0-10
group_by(all_descriptions) %>% # group by common words
summarise(number_of_descriptions = n()) %>% #count how many times each word was used
arrange(desc(number_of_descriptions)) #arrange by most common word count in descending order
faces #call the object
face_descriptions_split_cols <- face_descriptions_long %>%
separate(descriptions_1, into = c("description_1",
"description_2",
"description_3",
"description_4",
sep = "//")) %>%
select(c(user_id:description_4))
face_descriptions_split_cols
faces <- read_csv("data/face_descriptions.csv") %>%
pivot_longer(cols = c(t1:t50),
names_to = "t_1-50",
values_to = "descriptions_1") %>%
separate(descriptions_1, into = c("description_1",
"description_2",
"description_3",
"description_4",
sep = "//")) %>%
select(c(user_id:description_4)) %>%
pivot_longer(cols = c(description_1: description_4),
names_to = "description_id",
values_to = "all_descriptions") %>%
filter(!is.na(all_descriptions)) %>% #removed all NAs
filter(!all_descriptions == "") %>% #removed all empty charachters
filter(!all_descriptions < nchar("abc")) %>% #attempted to remove chars shorter than 2.
filter(!all_descriptions %in% c(0:10)) %>% #attempted to remove anything that contains any numbers 0-10
group_by(all_descriptions) %>% # group by common words
summarise(number_of_descriptions = n()) %>% #count how many times each word was used
arrange(desc(number_of_descriptions)) #arrange by most common word count in descending order
face_descriptions_split_cols <- face_descriptions_long %>%
separate(descriptions_1, into = c("description_1",
"description_2",
"description_3",
"description_4",
sep = "/")) %>%
select(c(user_id:description_4))
face_descriptions_split_cols
face_descriptions_split_cols <- face_descriptions_long %>%
separate(descriptions_1, into = c("description_1",
"description_2",
"description_3",
"description_4",
sep = "/")) %>%
#select(c(user_id:description_4))
face_descriptions_split_cols
face_descriptions_split_cols <- face_descriptions_long %>%
separate(descriptions_1, into = c("description_1",
"description_2",
"description_3",
"description_4",
sep = "/")) %>%
select(c(user_id:description_4))
face_descriptions_split_cols
face_descriptions_split_cols <- face_descriptions_long %>%
separate(descriptions_1, into = c("description_1",
"description_2",
"description_3",
"description_4",
sep = ("/"))) %>%
select(c(user_id:description_4))
face_descriptions_split_cols
face_descriptions_split_cols <- face_descriptions_long %>%
separate(descriptions_1, into = c("description_1",
"description_2",
"description_3",
"description_4",
sep = ["/"])) %>%
face_descriptions_split_cols <- face_descriptions_long %>%
separate(descriptions_1, into = c("description_1",
"description_2",
"description_3",
"description_4",
sep = "/")) %>%
select(c(user_id:description_4))
face_descriptions_split_cols
filtered_descriptions <- all_descriptions %>%
filter(!is.na(all_descriptions)) %>% #removed all NAs
filter(!all_descriptions == "") %>% #removed all empty charachters
filter(nchar(all_descriptions) > 2) %>% #attempted to remove chars shorter than 2.
filter(!all_descriptions %in% c(0:10)) #attempted to remove anything that contains any numbers 0-10
filtered_descriptions
filtered_descriptions <- all_descriptions %>%
filter(!is.na(all_descriptions)) %>% #removed all NAs
filter(!all_descriptions == "") %>% #removed all empty charachters
filter(nchar(all_descriptions) > 3) %>% #attempted to remove chars shorter than 2.
filter(!all_descriptions %in% c(0:10)) #attempted to remove anything that contains any numbers 0-10
filtered_descriptions
filtered_descriptions <- all_descriptions %>%
filter(!is.na(all_descriptions)) %>% #removed all NAs
filter(!all_descriptions == "") %>% #removed all empty charachters
filter(nchar(all_descriptions) > 2) %>% #attempted to remove chars shorter than 2.
filter(!all_descriptions %in% c(0:10)) #attempted to remove anything that contains any numbers 0-10
filtered_descriptions
faces <- read_csv("data/face_descriptions.csv") %>%
pivot_longer(cols = c(t1:t50),
names_to = "t_1-50",
values_to = "descriptions_1") %>%
separate(descriptions_1, into = c("description_1",
"description_2",
"description_3",
"description_4",
sep = "//")) %>%
select(c(user_id:description_4)) %>%
pivot_longer(cols = c(description_1: description_4),
names_to = "description_id",
values_to = "all_descriptions") %>%
filter(!is.na(all_descriptions)) %>% #removed all NAs
filter(!all_descriptions == "") %>% #removed all empty charachters
filter(nchar(all_descriptions) > 2) %>% #attempted to remove chars shorter than 2.
filter(!all_descriptions %in% c(0:10)) %>% #attempted to remove anything that contains any numbers 0-10
group_by(all_descriptions) %>% # group by common words
summarise(number_of_descriptions = n()) %>% #count how many times each word was used
arrange(desc(number_of_descriptions)) #arrange by most common word count in descending order
faces <- read_csv("data/face_descriptions.csv") %>%
pivot_longer(cols = c(t1:t50),
names_to = "t_1-50",
values_to = "descriptions_1") %>%
separate(descriptions_1, into = c("description_1",
"description_2",
"description_3",
"description_4",
sep = "/")) %>%
select(c(user_id:description_4)) %>%
pivot_longer(cols = c(description_1: description_4),
names_to = "description_id",
values_to = "all_descriptions") %>%
filter(!is.na(all_descriptions)) %>% #removed all NAs
filter(!all_descriptions == "") %>% #removed all empty charachters
filter(nchar(all_descriptions) > 2) %>% #attempted to remove chars shorter than 2.
filter(!all_descriptions %in% c(0:10)) %>% #attempted to remove anything that contains any numbers 0-10
group_by(all_descriptions) %>% # group by common words
summarise(number_of_descriptions = n()) %>% #count how many times each word was used
arrange(desc(number_of_descriptions)) #arrange by most common word count in descending order
face_descriptions_long <- face_descriptions %>%
pivot_longer(cols = c(t1:t50),
names_to = "t_1-50",
values_to = "descriptions_1")
head(face_descriptions_long)
face_descriptions_long <- face_descriptions %>%
pivot_longer(cols = c(t1:t50),
names_to = "t_1-50",
values_to = "descriptions_1")
face_descriptions_long
face_descriptions_split_cols <- face_descriptions_long %>%
separate(descriptions_1, into = c("description_1",
"description_2",
"description_3",
"description_4"),
sep = "/") %>%
select(c(user_id:description_4))
face_descriptions_split_cols
library(tidyverse)
face_descriptions <- read_csv("data/face_descriptions.csv")
dim(face_descriptions)
names(face_descriptions)
head(face_descriptions, 10)
#view(face_descriptions)
#unique(face_descriptions$user_id)
face_descriptions_long <- face_descriptions %>%
pivot_longer(cols = c(t1:t50),
names_to = "t_1-50",
values_to = "descriptions_1")
face_descriptions_long
face_descriptions_split_cols <- face_descriptions_long %>%
separate(descriptions_1, into = c("description_1",
"description_2",
"description_3",
"description_4"),
sep = "/") %>%
select(c(user_id:description_4))
face_descriptions_split_cols
all_descriptions <- face_descriptions_split_cols %>%
pivot_longer(cols = c(description_1: description_4),
names_to = "description_id",
values_to = "all_descriptions")
all_descriptions
filtered_descriptions <- all_descriptions %>%
filter(!is.na(all_descriptions)) %>% #removed all NAs
filter(!all_descriptions == "") %>% #removed all empty charachters
filter(nchar(all_descriptions) > 2) %>% #attempted to remove chars shorter than 2.
filter(!all_descriptions %in% c(0:10)) #attempted to remove anything that contains any numbers 0-10
filtered_descriptions
filtered_descriptions <- all_descriptions %>%
filter(!is.na(all_descriptions)) %>% #removed all NAs
filter(!all_descriptions == "") %>% #removed all empty charachters
filter(nchar(all_descriptions) > 1) %>% #attempted to remove chars shorter than 2.
filter(!all_descriptions %in% c(0:10)) #attempted to remove anything that contains any numbers 0-10
filtered_descriptions
filtered_descriptions <- all_descriptions %>%
filter(!is.na(all_descriptions)) %>% #removed all NAs
filter(!all_descriptions == "") %>% #removed all empty charachters
filter(nchar(all_descriptions) > 4) %>% #attempted to remove chars shorter than 2.
filter(!all_descriptions %in% c(0:10)) #attempted to remove anything that contains any numbers 0-10
filtered_descriptions
filtered_descriptions <- all_descriptions %>%
filter(!is.na(all_descriptions)) %>% #removed all NAs
filter(!all_descriptions == "") %>% #removed all empty charachters
filter(nchar(all_descriptions) > 3) %>% #attempted to remove chars shorter than 2.
filter(!all_descriptions %in% c(0:10)) #attempted to remove anything that contains any numbers 0-10
filtered_descriptions
face_descriptions_split_cols <- face_descriptions_long %>%
separate(descriptions_1, into = c("description_1",
"description_2",
"description_3",
"description_4"),
sep = c("/", ",")) %>%
select(c(user_id:description_4))
face_descriptions_split_cols
face_descriptions_split_cols <- face_descriptions_long %>%
separate(descriptions_1, into = c("description_1",
"description_2",
"description_3",
"description_4"),
sep = c("/", "\,")) %>%
face_descriptions_split_cols <- face_descriptions_long %>%
separate(descriptions_1, into = c("description_1",
"description_2",
"description_3",
"description_4"),
sep = "([/,])") %>%
select(c(user_id:description_4))
face_descriptions_split_cols
faces <- read_csv("data/face_descriptions.csv") %>%
pivot_longer(cols = c(t1:t50),
names_to = "t_1-50",
values_to = "descriptions_1") %>%
separate(descriptions_1, into = c("description_1",
"description_2",
"description_3",
"description_4"),
sep = "([/,])") %>%
select(c(user_id:description_4)) %>%
pivot_longer(cols = c(description_1: description_4),
names_to = "description_id",
values_to = "all_descriptions") %>%
filter(!is.na(all_descriptions)) %>% #removed all NAs
filter(!all_descriptions == "") %>% #removed all empty charachters
filter(nchar(all_descriptions) > 2) %>% #attempted to remove chars shorter than 2.
filter(!all_descriptions %in% c(0:10)) %>% #attempted to remove anything that contains any numbers 0-10
group_by(all_descriptions) %>% # group by common words
summarise(number_of_descriptions = n()) %>% #count how many times each word was used
arrange(desc(number_of_descriptions)) #arrange by most common word count in descending order
faces <- read_csv("data/face_descriptions.csv") %>%
pivot_longer(cols = c(t1:t50),
names_to = "t_1-50",
values_to = "descriptions_1") %>%
separate(descriptions_1, into = c("description_1",
"description_2",
"description_3",
"description_4"),
sep = "([/,])") %>%
select(c(user_id:description_4)) %>%
pivot_longer(cols = c(description_1: description_4),
names_to = "description_id",
values_to = "all_descriptions") %>%
filter(!is.na(all_descriptions)) %>% #removed all NAs
filter(!all_descriptions == "") %>% #removed all empty charachters
filter(nchar(all_descriptions) > 3) %>% #attempted to remove chars shorter than 2.
filter(!all_descriptions %in% c(0:10)) %>% #attempted to remove anything that contains any numbers 0-10
group_by(all_descriptions) %>% # group by common words
summarise(number_of_descriptions = n()) %>% #count how many times each word was used
arrange(desc(number_of_descriptions)) #arrange by most common word count in descending order
faces <- read_csv("data/face_descriptions.csv") %>%
pivot_longer(cols = c(t1:t50),
names_to = "t_1-50",
values_to = "descriptions_1") %>%
separate(descriptions_1, into = c("description_1",
"description_2",
"description_3",
"description_4"),
sep = "([/,])") %>%
select(c(user_id:description_4)) %>%
pivot_longer(cols = c(description_1: description_4),
names_to = "description_id",
values_to = "all_descriptions") %>%
filter(!is.na(all_descriptions)) %>% #removed all NAs
filter(nchar(all_descriptions) > 3) %>% #attempted to remove chars shorter than 2.
group_by(all_descriptions) %>% # group by common words
summarise(number_of_descriptions = n()) %>% #count how many times each word was used
arrange(desc(number_of_descriptions)) #arrange by most common word count in descending order
faces <- read_csv("data/face_descriptions.csv") %>%
pivot_longer(cols = c(t1:t50),
names_to = "t_1-50",
values_to = "descriptions_1") %>%
separate(descriptions_1, into = c("description_1",
"description_2",
"description_3",
"description_4"),
sep = "([/,])") %>%
select(c(user_id:description_4)) %>%
pivot_longer(cols = c(description_1: description_4),
names_to = "description_id",
values_to = "all_descriptions") %>%
filter(!is.na(all_descriptions)) %>% #removed all NAs
filter(nchar(all_descriptions) > 4) %>% #attempted to remove chars shorter than 2.
group_by(all_descriptions) %>% # group by common words
summarise(number_of_descriptions = n()) %>% #count how many times each word was used
arrange(desc(number_of_descriptions)) #arrange by most common word count in descending order
faces #call the object
faces <- read_csv("data/face_descriptions.csv") %>%
pivot_longer(cols = c(t1:t50),
names_to = "t_1-50",
values_to = "descriptions_1") %>%
separate(descriptions_1, into = c("description_1",
"description_2",
"description_3",
"description_4"),
sep = "([/,])") %>%
select(c(user_id:description_4)) %>%
pivot_longer(cols = c(description_1: description_4),
names_to = "description_id",
values_to = "all_descriptions") %>%
filter(!is.na(all_descriptions)) %>% #removed all NAs
filter(nchar(all_descriptions) > 3) %>% #attempted to remove chars shorter than 2.
group_by(all_descriptions) %>% # group by common words
summarise(number_of_descriptions = n()) %>% #count how many times each word was used
arrange(desc(number_of_descriptions)) #arrange by most common word count in descending order
faces #call the object

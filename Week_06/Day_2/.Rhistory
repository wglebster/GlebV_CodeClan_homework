summarize(total_phones = n())%>%
arrange(desc(total_phones))
most_hones <- clean_data_set %>%
group_by(brand) %>%
summarize(total_phones = n())%>%
arrange(desc(total_phones))
most_hones <- clean_data_set %>%
group_by(brand) %>%
summarize(total_phones = n())%>%
arrange(desc(total_phones))
most_phones <- clean_data_set %>%
group_by(brand) %>%
summarize(total_phones = n())%>%
arrange(desc(total_phones))
most_phones <- clean_data_set %>%
group_by(brand) %>%
summarize(total_phones = n())%>%
arrange(desc(total_phones))
most_phones <- clean_data_set %>%
group_by(brand) %>%
summarize(total_phones = n())%>%
arrange(desc(total_phones))
clean_data_set <- data_set %>%
clean_names()
names(clean_data_set)
View(clean_data_set)
most_phones <- clean_data_set %>%
group_by(brand) %>%
summarize(total_phones = n())%>%
arrange(desc(total_phones))
most_phones <- clean_data_set
most_phones <- clean_data_set %>%
group_by(brand)
most_phones <- clean_data_set %>%
group_by(brand) %>%
summarise(number_of_phones = n())
most_phones <- clean_data_set %>%
group_by(brand) %>%
summarise(n())
library(stats)
library(prob)
library(janitor)
library(tidyverse)
most_phones <- clean_data_set %>%
group_by(brand) %>%
summarise(n())
most_phones <- clean_data_set %>%
group_by(brand) %>%
summarise(n())
most_phones <- clean_data_set %>%
group_by(brand) %>%
summarise(n())
most_phones <- clean_data_set %>%
group_by(brand) %>%
summarise(n())
most_phones <- clean_data_set %>%
group_by(brand) %>%
summarise(n())
most_phones <- clean_data_set %>%
group_by(brand)
most_phones <- clean_data_set %>%
group_by(brand) %>%
summarise(n())
most_phones <- clean_data_set %>%
group_by(brand) %>%
summarise(count = n())
most_phones <- clean_data_set %>%
group_by(brand) %>%
summarise(count = n())
most_phones <- clean_data_set %>%
group_by(brand) %>%
summarise(count = n())
most_phones <- clean_data_set %>%
group_by(brand) %>%
summarise(count = n())
most_phones <- clean_data_set %>%
group_by(brand) %>%
summarise(count = n())
most_phones <- clean_data_set %>%
group_by(brand) %>%
summarise(count = n())
most_phones <- clean_data_set %>%
group_by(brand) %>%
summarise(count = n())
most_phones <- clean_data_set %>%
group_by(brand) %>%
summarise(count = n())
library(stats)
library(prob)
library(janitor)
library(tidyverse)
data_set <- read_csv("data/20190928-items.csv")
#View(data_set)
clean_data_set <- data_set %>%
clean_names()
names(clean_data_set)
most_phones <- clean_data_set %>%
group_by(brand) %>%
summarise(count = n())
dunif(clean_data_set, )
most_phones <- clean_data_set %>%
group_by(brand) %>%
summarise(brand, count = n())
most_phones <- clean_data_set %>%
group_by(brand) %>%
summarise(brand, count = n())
most_phones <- clean_data_set %>%
group_by(brand) %>%
summarise(.groups, count = n())
most_phones <- clean_data_set %>%
group_by(brand) %>%
summarise(.brand, count = n())
most_phones <- clean_data_set %>%
group_by(brand) %>%
summarise(.brand, count = n())
most_phones <- clean_data_set %>%
group_by(brand) %>%
summarise(.brand, count = n())
most_phones <- clean_data_set %>%
group_by(brand) %>%
summarise(brand, count = n())
most_phones <- clean_data_set %>%
group_by(brand) %>%
summarise(brand, count = count())
most_phones <- clean_data_set %>%
group_by(brand) %>%
summarise(brand, count = count())
most_phones <- clean_data_set %>%
group_by(brand) %>%
summarise(count = count())
most_phones <- clean_data_set %>%
group_by(brand) %>%
summarise(count = count())
most_phones <- clean_data_set %>%
group_by(brand) %>%
summarise(count = count())
most_phones <- clean_data_set %>%
group_by(brand) %>%
summarise(count = count())
most_phones <- clean_data_set %>%
group_by(brand) %>%
summarise(count = count())
most_phones <- clean_data_set %>%
group_by(brand) %>%
summarise(count = count())
most_phones <- clean_data_set %>%
group_by(brand) %>%
summarise(count = count())
most_phones <- clean_data_set %>%
group_by(brand) %>%
summarise(count = count())
most_phones <- clean_data_set %>%
group_by(brand) %>%
summarise(count = count())
most_phones <- clean_data_set %>%
group_by(brand) %>%
summarise(count = count(brand))
most_phones <- clean_data_set %>%
group_by(brand) %>%
summarise(count = count(brand))
most_phones <- clean_data_set %>%
group_by(brand) %>%
summarise(count = count(brand))
most_phones <- clean_data_set %>%
group_by(brand) %>%
summarise(count = count(brand))
most_phones <- clean_data_set %>%
group_by(brand) %>%
summarise_all(n())
most_phones <- clean_data_set %>%
group_by(brand) %>%
summarise_all(n())
most_phones <- clean_data_set %>%
group_by(brand) %>%
summarise_all(count())
most_phones <- clean_data_set %>%
group_by(brand) %>%
summarise_all(count(brands))
most_phones <- clean_data_set %>%
group_by(brand) %>%
summarise_all(count(brands))
most_phones <- clean_data_set %>%
group_by(brand)
most_phones
most_phones
most_phones <- clean_data_set %>%
group_by(brand)
most_phones
most_phones <- clean_data_set %>%
group_by(brand) %>%
summarise(n())
most_phones
most_phones <- clean_data_set %>%
group_by(brand) %>%
summarise(n()) %>%
arrange()
most_phones
most_phones <- clean_data_set %>%
group_by(brand) %>%
summarise(n()) %>%
arrange(decreasing = FALSE)
most_phones
most_phones <- clean_data_set %>%
group_by(brand) %>%
summarise(n()) %>%
sort(decreasing = FALSE)
most_phones <- clean_data_set %>%
group_by(brand) %>%
summarise(count = n())
most_phones
most_phones <- clean_data_set %>%
group_by(brand) %>%
summarise(count = n()) %>%
arrange(desc(count))
most_phones
# plot histogram of ratings for Samsung phones.
clean_data_set %>%
filter(brand == "Samsung") %>%
ggplot(aes(x = rating)) +
geom_histogram(aes(y = ..density..), col = "white")
# plot histogram of ratings for Samsung phones.
clean_data_set %>%
filter(brand == "Samsung") %>%
ggplot(aes(x = rating)) +
geom_histogram(aes(y = ..count..), col = "white")
# plot histogram of ratings for Samsung phones.
clean_data_set %>%
filter(brand == "Samsung") %>%
ggplot(aes(x = rating)) +
geom_histogram(aes(y = ..density..), col = "white")
# plot histogram of ratings for Samsung phones.
clean_data_set %>%
filter(brand == "Samsung") %>%
ggplot(aes(x = rating)) +
geom_histogram(aes(y = ..density..), col = "white", binwidth = 25)
# plot histogram of ratings for Samsung phones.
clean_data_set %>%
filter(brand == "Samsung") %>%
ggplot(aes(x = rating)) +
geom_histogram(aes(y = ..density..), col = "white", binwidth = 5)
# plot histogram of ratings for Samsung phones.
clean_data_set %>%
filter(brand == "Samsung") %>%
ggplot(aes(x = rating)) +
geom_histogram(aes(y = ..density..), col = "white", binwidth = 1)
# plot histogram of ratings for Samsung phones.
clean_data_set %>%
filter(brand == "Samsung") %>%
ggplot(aes(x = rating)) +
geom_histogram(aes(y = ..density..), col = "white", binwidth = 0.5)
# plot histogram of ratings for Samsung phones.
clean_data_set %>%
filter(brand == "Samsung") %>%
ggplot(aes(x = rating)) +
geom_histogram(aes(y = ..density..), col = "white", binwidth = 0.1)
# plot histogram of ratings for Samsung phones.
clean_data_set %>%
filter(brand == "Samsung") %>%
ggplot(aes(x = rating)) +
geom_histogram(aes(y = ..density..), col = "white", bins = 397)
# plot histogram of ratings for Samsung phones.
clean_data_set %>%
filter(brand == "Samsung") %>%
ggplot(aes(x = rating)) +
geom_histogram(aes(y = ..density..), col = "white", bins = 100)
# plot histogram of ratings for Samsung phones.
clean_data_set %>%
filter(brand == "Samsung") %>%
ggplot(aes(x = rating)) +
geom_histogram(aes(y = ..density..), bins = 100)
# plot histogram of ratings for Samsung phones.
clean_data_set %>%
filter(brand == "Samsung") %>%
ggplot(aes(x = rating)) +
geom_histogram(aes(y = ..density..), bins = 200)
# plot histogram of ratings for Samsung phones.
clean_data_set %>%
filter(brand == "Samsung") %>%
ggplot(aes(x = rating)) +
geom_histogram(aes(y = ..density..), bins = 350)
# plot histogram of ratings for Samsung phones.
clean_data_set %>%
filter(brand == "Samsung") %>%
ggplot(aes(x = rating)) +
geom_histogram(aes(y = ..density..), bins = 50)
# plot histogram of ratings for Samsung phones.
clean_data_set %>%
filter(brand == "Samsung") %>%
ggplot(aes(x = rating)) +
geom_histogram(aes(y = ..density..), col = "white", bins = 50)
# plot histogram of ratings for Samsung phones.
clean_data_set %>%
filter(brand == "Samsung") %>%
ggplot(aes(x = rating)) +
geom_histogram(aes(y = ..density..), col = "white", bins = 5)
# plot histogram of ratings for Samsung phones.
clean_data_set %>%
filter(brand == "Samsung") %>%
ggplot(aes(x = rating)) +
geom_histogram(aes(y = ..density..), col = "white", bins = 20)
# plot histogram of ratings for Samsung phones.
clean_data_set %>%
filter(brand == "Samsung") %>%
ggplot(aes(x = rating)) +
geom_histogram(aes(y = ..density..), col = "white", bins = 30)
# plot histogram of ratings for Samsung phones.
clean_data_set %>%
filter(brand == "Samsung") %>%
ggplot(aes(x = rating)) +
geom_histogram(aes(y = ..density..), col = "white", bins = 30) %>% #reducing the number of bins (e.g. to 5) makes this dataset look more like normal distribution.
#apply normal distribution overlay
stat_function(
fun = dnorm,
args = list(
mean = mean(rating),
sd = sd(rating)
),
col = "grey"
)
# plot histogram of ratings for Samsung phones.
clean_data_set %>%
filter(brand == "Samsung") %>%
ggplot(aes(x = rating)) +
geom_histogram(aes(y = ..density..), col = "white", bins = 30) %>% #reducing the number of bins (e.g. to 5) makes this dataset look more like normal distribution.
#apply normal distribution overlay
stat_function(
fun = dnorm,
args = list(
mean = mean(clean_data_set$rating),
sd = sd(clean_data_set$rating)
),
col = "grey"
)
# plot histogram of ratings for Samsung phones.
clean_data_set %>%
filter(brand == "Samsung") %>%
ggplot(aes(x = rating)) +
geom_histogram(aes(y = ..density..), col = "white", bins = 30) + #reducing the number of bins (e.g. to 5) makes this dataset look more like normal distribution.
#apply normal distribution overlay
stat_function(
fun = dnorm,
args = list(
mean = mean(rating),
sd = sd(rating)
),
col = "grey"
)
# plot histogram of ratings for Samsung phones.
clean_data_set %>%
filter(brand == "Samsung") %>%
ggplot(aes(x = rating)) +
geom_histogram(aes(y = ..density..), col = "white", bins = 30) + #reducing the number of bins (e.g. to 5) makes this dataset look more like normal distribution.
#apply normal distribution overlay
stat_function(
fun = dnorm,
args = list(
mean = mean(clean_data_set$rating),
sd = sd(clean_data_set$rating)
),
col = "grey"
)
# plot histogram of ratings for Samsung phones.
clean_data_set %>%
filter(brand == "Samsung") %>%
ggplot(aes(x = rating)) +
geom_histogram(aes(y = ..density..), col = "white", bins = 30) + #reducing the number of bins (e.g. to 5) makes this dataset look more like normal distribution.
#apply normal distribution overlay
stat_function(
fun = dnorm,
args = list(
mean = mean(clean_data_set$rating),
sd = sd(clean_data_set$rating)
),
col = "red"
)
# plot histogram of ratings for Samsung phones.
clean_data_set %>%
filter(brand == "Samsung") %>%
ggplot(aes(x = rating)) +
geom_histogram(aes(y = ..density..), col = "white", bins = 30) + #reducing the number of bins (e.g. to 5) makes this dataset look more like normal distribution.
#apply normal distribution overlay
stat_function(
fun = dnorm,
args = list(
mean = mean(clean_data_set$rating),
sd = sd(clean_data_set$rating)
),
col = "black"
)
clean_data_set %>%
filter(brand == "Samsung") %>%
ggplot(aes(x = rating)) +
geom_histogram(aes(y = ..density..), col = "white", bins = 10) + #reducing the number of bins (e.g. to 5) makes this dataset look more like normal distribution.
#apply normal distribution overlay
stat_function(
fun = dnorm,
args = list(
mean = mean(clean_data_set$rating),
sd = sd(clean_data_set$rating)
),
col = "black"
)
clean_data_set %>%
filter(brand == "Samsung") %>%
ggplot(aes(x = rating)) +
geom_histogram(aes(y = ..density..), col = "white", bins = 5) + #reducing the number of bins (e.g. to 5) makes this dataset look more like normal distribution.
#apply normal distribution overlay
stat_function(
fun = dnorm,
args = list(
mean = mean(clean_data_set$rating),
sd = sd(clean_data_set$rating)
),
col = "black"
)
# Calculate mean and sd of the ratings
stats_of_ratings <- clean_data_set %>%
filter(brand == "Samsung") %>%
summarise(total_ratings = n(),
average_rating = mean(rating),
sd = sd(rating))
# Calculate mean and sd of the ratings
stats_of_ratings <- clean_data_set %>%
filter(brand == "Samsung") %>%
summarise(total_ratings = n(),
average_rating = mean(rating),
sd = sd(rating))
stats_of_ratings
prop_of_ratings <- clean_data_set %>%
filter(rating>= stats_of_ratings$average_rating - stats_of_ratings$sd) %>%
filter(rating<= stats_of_ratings$average_rating + stats_of_ratings$sd) %>%
summarise(within_one_sd_prop = n() / 397)
prop_of_ratings <- clean_data_set %>%
filter(rating>= stats_of_ratings$average_rating - stats_of_ratings$sd) %>%
filter(rating<= stats_of_ratings$average_rating + stats_of_ratings$sd) %>%
summarise(within_one_sd_prop = n() / 397)
prop_of_ratings
prop_of_ratings <- clean_data_set %>%
filter(rating>= stats_of_ratings$average_rating - stats_of_ratings$sd) %>%
filter(rating<= stats_of_ratings$average_rating + stats_of_ratings$sd) %>%
summarise(within_one_sd_prop = n() / stats_of_ratings$total_ratings)
prop_of_ratings
within_one_sd_prop = n()
prop_of_ratings <- clean_data_set %>%
filter(rating>= stats_of_ratings$average_rating - stats_of_ratings$sd) %>%
filter(rating<= stats_of_ratings$average_rating + stats_of_ratings$sd) %>%
summarise(within_one_sd_prop = n()
prop_of_ratings <- clean_data_set %>%
prop_of_ratings <- clean_data_set %>%
filter(rating>= stats_of_ratings$average_rating - stats_of_ratings$sd) %>%
filter(rating<= stats_of_ratings$average_rating + stats_of_ratings$sd) %>%
summarise(within_one_sd_prop = n()) #/ stats_of_ratings$total_ratings)
prop_of_ratings
397/619
prop_of_ratings <- clean_data_set %>%
filter(rating>= stats_of_ratings$average_rating - stats_of_ratings$sd) %>%
filter(rating<= stats_of_ratings$average_rating + stats_of_ratings$sd) %>%
summarise(within_one_sd_prop = n() / stats_of_ratings$total_ratings))
prop_of_ratings <- clean_data_set %>%
filter(rating>= stats_of_ratings$average_rating - stats_of_ratings$sd) %>%
filter(rating<= stats_of_ratings$average_rating + stats_of_ratings$sd) %>%
summarise(within_one_sd_prop = n() / stats_of_ratings$total_ratings)
prop_of_ratings
prop_of_ratings <- clean_data_set %>%
filter(rating>= stats_of_ratings$average_rating - stats_of_ratings$sd) %>%
filter(rating<= stats_of_ratings$average_rating + stats_of_ratings$sd) %>%
summarise(within_one_sd_prop = stats_of_ratings$total_ratings / n())
prop_of_ratings
prop_of_ratings <- clean_data_set %>%
filter(rating>= stats_of_ratings$average_rating - (stats_of_ratings$sd*2) %>%
filter(rating<= stats_of_ratings$average_rating + (stats_of_ratings$sd*2) %>%
summarise(within_one_sd_prop = stats_of_ratings$total_ratings / n())
prop_of_ratings
prop_of_ratings <- clean_data_set %>%
filter(rating>= stats_of_ratings$average_rating - (stats_of_ratings$sd*2)) %>%
filter(rating<= stats_of_ratings$average_rating + (stats_of_ratings$sd*2)) %>%
summarise(within_one_sd_prop = stats_of_ratings$total_ratings / n())
prop_of_ratings
?pnorm
prop_of_ratings <- clean_data_set %>%
filter(rating>= stats_of_ratings$average_rating - (stats_of_ratings$sd*2)) %>%
filter(rating<= stats_of_ratings$average_rating + (stats_of_ratings$sd*2)) %>%
summarise(within_one_sd_prop = stats_of_ratings$total_ratings / n())
prop_of_ratings
100*(pnorm(q = 1) - pnorm(q = -1))
prop_of_ratings <- clean_data_set %>%
filter(rating>= stats_of_ratings$average_rating - (stats_of_ratings$sd*2)) %>%
filter(rating<= stats_of_ratings$average_rating + (stats_of_ratings$sd*2)) %>%
summarise(within_one_sd_prop = stats_of_ratings$total_ratings / n())
prop_of_ratings
100 * (pnorm(clean_data_set$rating, mean = stats_of_ratings$average_rating, sd = 1) -
pnorm(clean_data_set$rating, mean = stats_of_ratings$average_rating, sd = - 1))
prop_of_ratings <- clean_data_set %>%
filter(rating>= stats_of_ratings$average_rating - (stats_of_ratings$sd*2)) %>%
filter(rating<= stats_of_ratings$average_rating + (stats_of_ratings$sd*2)) %>%
summarise(within_one_sd_prop = stats_of_ratings$total_ratings / n())
prop_of_ratings
prop_of_ratings <- clean_data_set %>%
filter(rating>= stats_of_ratings$average_rating - (stats_of_ratings$sd)) %>%
filter(rating<= stats_of_ratings$average_rating + (stats_of_ratings$sd)) %>%
summarise(within_one_sd_prop = stats_of_ratings$total_ratings / n())
prop_of_ratings
prop_of_ratings <- clean_data_set %>%
filter(rating>= stats_of_ratings$average_rating - (stats_of_ratings$sd)) %>%
filter(rating<= stats_of_ratings$average_rating + (stats_of_ratings$sd)) %>%
summarise(within_one_sd_prop = n() / stats_of_ratings$total_ratings)
prop_of_ratings
prop_of_ratings <- clean_data_set %>%
filter(rating>= stats_of_ratings$average_rating - stats_of_ratings$sd) %>%
filter(rating<= stats_of_ratings$average_rating + stats_of_ratings$sd) %>%
summarise(within_one_sd_prop = n() / stats_of_ratings$total_ratings)
prop_of_ratings

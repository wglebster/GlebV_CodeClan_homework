library(CodeClanData)
?CodeClanData
View(CodeClanData::cycle_routes)
View(CodeClanData::volcano)
View(CodeClanData::olympics_overall_medals)
View(CodeClanData::women_in_gov)
library(CodeClanData)
library(shiny)
library(shinythemes)
library(tidyverse)
runApp()
runApp()
runApp()
runApp()
# UI section
ui <- fluidPage(
theme = shinytheme("slate"),
titlePanel(tags$h4("Medals by Teams")),
)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp('~/Desktop/CodeClan/Codeclan_work/Live_Projects/Module_2/Week5_day4/Shiny_advances_server/App_with_dropdowns')
runApp('~/Desktop/CodeClan/Codeclan_work/Live_Projects/Module_2/Week5_day4/Shiny_advances_server/App_with_dropdowns')
runApp('~/Desktop/CodeClan/Codeclan_work/Live_Projects/Module_2/Week5_day4/Shiny_advances_server/App_with_dropdowns')
library(shiny)
library(dplyr)
library(CodeClanData)
library(shiny)
library(dplyr)
library(CodeClanData)
library(ggplot2)
library(shiny)
library(dplyr)
library(CodeClanData)
library(ggplot2)
runApp('~/Desktop/CodeClan/Codeclan_work/Live_Projects/Module_2/Week5_day4/reactivity')
runApp('~/Desktop/CodeClan/Codeclan_work/Live_Projects/Module_2/Week5_day4/reactivity')
runApp('~/Desktop/CodeClan/Codeclan_work/Live_Projects/Module_2/Week5_day4/reactivity')
runApp('~/Desktop/CodeClan/Codeclan_work/Live_Projects/Module_2/Week5_day4/reactivity')
library(shiny)
library(dplyr)
library(ggplot2)
library(CodeClanData)
ui <- fluidPage(
fluidRow(
column(4,
sliderInput("bins",
"Number of Bins",
min = 1, max = 100, value = 30)
),
column(4,
sliderInput("alpha",
"Alpha of Points",
min = 0, max = 1, value = 0.8)
),
column(4,
sliderInput("max_height",
"Maximum Height to Plot",
min = min(students_big$height),
max = max(students_big$height),
value = max(students_big$height))
)
),
fluidRow(
column(6,
plotOutput("histogram")
),
column(6,
plotOutput("scatter")
)
)
)
server <- function(input, output) {
students_filtered <- reactive({
students_big %>%
filter(height <= input$max_height)
})
output$histogram <- renderPlot({
ggplot(students_filtered()) +
aes(x = height) +
geom_histogram(bins = input$bins)
})
output$scatter <- renderPlot({
ggplot(students_filtered()) +
aes(x = height, y = arm_span) +
geom_point(alpha = input$alpha)
})
}
shinyApp(ui = ui, server = server)

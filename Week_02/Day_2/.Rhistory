library(RPostgreSQL) #import psql library
credentials_location <- paste0(Sys.getenv("HOME"),"/credentials.R") #get file path to credentials.
source(credentials_location) #source in credentials
#create db connection
wrestling_db_connection <- dbConnect(drv = PostgreSQL(max.con = 2), user = postgresql_username, password = postgresql_password, dbname = 'wrestling', host = 'localhost')
dbListTables(conn = my_db_connection)
dbListTables(conn = wrestling_db_connection)
dbListTables(conn = wrestling_db_connection) #check what table names are contained in the database
dbListFields(conn = wrestling_db_connection, name = "wrestlers")
dbListTables(conn = wrestling_db_connection) #check what table names are contained in the database
dbListFields(conn = wrestling_db_connection)
dbListTables(conn = wrestling_db_connection) #check what table names are contained in the database
dbListFields(conn = wrestling_db_connection, name = "wrestlers")#check which fields (columns) are contained in the database. Â¡NB! even though "wrestlers" is the only table in this database, name has to specified, otherwise the function returns an error.
wrestling_data <- dbGetQuery(conn = wrestling_db_connection, statement =
"SELECT * FROM wrestlers")
wrestling_data
wrestling_data <- dbGetQuery(conn = wrestling_db_connection, statement =
"SELECT * FROM wrestlers")
class(wrestling_data$gender)
wrestling_data <- dbGetQuery(conn = wrestling_db_connection, statement =
"SELECT * FROM wrestlers")
wrestling_data
wrestling_data <- dbGetQuery(conn = wrestling_db_connection, statement =
"SELECT * FROM wrestlers")
head(wrestling_data)
wrestling_data <- dbGetQuery(conn = wrestling_db_connection, statement =
"SELECT * FROM wrestlers")
wrestling_data
str(wrestling_data)
library(RPostgreSQL) #import psql library
credentials_location <- paste0(Sys.getenv("HOME"),"/credentials.R") #get file path to credentials.
source(credentials_location) #source in credentials
# this closes db connection
dbDisconnect(conn = db_connect)
home_location <- Sys.getenv("HOME")
credentials_location <- paste0(home_location,"/credentials.R")
source(credentials_location) #this loads the credentials into R Environment
#install.packages("RPostgreSQL")
library(RPostgreSQL)
my_db_connection <- dbConnect(drv = PostgreSQL(max.con = 1), user = postgresql_username, password = postgresql_password, dbname = 'omni_employees', host = 'localhost')
dbListTables(conn = my_db_connection)
dbListFields(conn = my_db_connection, name = "employees")
data <- dbGetQuery(conn = my_db_connection, statement = "SELECT * FROM employees")
data
dbGetQuery(conn = my_db_connection, statement =
"UPDATE employees SET email = 'sadame3@utexas.edu' WHERE id = 3;
SELECT * FROM employees WHERE id = 3")
# this closes db connection
dbDisconnect(conn = my_db_connection)
home_location <- Sys.getenv("HOME")
credentials_location <- paste0(home_location,"/credentials.R")
source(credentials_location) #this loads the credentials into R Environment
db_connect <- dbConnect(drv = PostgreSQL(max.con = 1), user = remote_omni_postgresql_username, password = remote_omni_postgresql_username, dbname='cjitjeca', host='34.245.37.126')
# this closes db connection
dbDisconnect(conn = db_connect)
# this closes db connection
dbDisconnect(conn = db_connect)
wrestling_remote_db_connection <- dbConnect(drv = PostgreSQL(max.con = 2), user = remote_omni_postgresql_username, password = remote_omni_postgresql_password, dbname = 'mvhbdgdk', host = 'manny.db.elephantsql.com')
#Check what tables db contains
dbListTables(conn = wrestling_remote_db_connection)
#Check what tables db contains
dbListTables(conn = wrestling_remote_db_connection)
#check all fields (columns)
dbListFields(conn = wrestling_remote_db_connection)
#Check what tables db contains
dbListTables(conn = wrestling_remote_db_connection)
#check all fields (columns)
dbListFields(conn = wrestling_remote_db_connection, name = "wrestlers")
remote_wrestlers <- dbGetQuery(conn = wrestling_remote_db_connection,
statement =
"SELECT * FROM wrestlers")
remote_wrestlers
#close remote db once finished working with it.
dbDisconnect(conn = remote_wrestlers)
